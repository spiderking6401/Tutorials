// importing required packages
import javax.microedition.midlet.*;
import javax.microedition.lcdui.*;


public class MutableImageExample extends MIDlet
{
	//delcaring references
	private Display display;
	private Mycanvas canvas;
	
	//definition of constructor
	public MutableImageExample()
	{
		display = Display.getDisplay(this);
		canvas = new Mycanvas(this);
	}
	//Starting midlet
	public void startApp(){
		display.setCurrent(canvas);
	}
	public void pauseApp()
	{
		
	}
	public void destroyApp(boolean uncond)
	{
		
	}
	public void exitMIDlet()
	{
		destroyApp(true);
		notifyDestroyed();
	}
	//canvas class contains the total image properties
	class Mycanvas extends Canvas implements CommandListener
	{
		//declaring references
		private Command exit;
		private Image image;
		private MutableImageExample mie;
		
		// definition of constructor
		public Mycanvas(MutableImageExample mie)
		{
			this.mie=mie;
			image = null;
			exit= new Command("EXiT", Command.EXIT,1);
			addCommand(exit);
			setCommandListener(this);
			
			//draws the image
			try{
				image = Image.createImage(70, 70);
				Graphics g = image.getGraphics();
				g.setColor(255, 0, 0);
				g.fillArc(10,10,60, 50, 270, 270);
			}catch(Exception e)
			{
				Alert alert = new Alert("Failure", "Loading image error...", null, null);
				alert.setTimeout(Alert.FOREVER);
				display.setCurrent(alert);
			}
		}
			//draw background of the screen
			public void paint(Graphics gr)
			{
				if(image !=null)
				{
					gr.setColor(255, 255, 0);
					gr.fillRect(0, 0, getWidth(), getHeight());
					gr.drawImage(image, 30, 30, gr.VCENTER | gr.HCENTER);
				}
			}
			//command actions for application
			public void commandAction(Command c, Displayable d)
			{
				if(c == exit)
				{
					mie.exitMIDlet();
				}
			}
		
	}
}
